body {
  margin: 0;
  padding: 0;
  min-height: 100vh;
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #f5f5f5;
  font-family: "Playfair Display", serif;
  background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 100 100"><rect width="100" height="100" fill="%23f0f0f0"/><path d="M0 0 L100 0 L100 100 L0 100 Z" fill="%23e0e0e0"/></svg>');
  background-size: 20px 20px;
  overflow: hidden;
}

.container {
  display: grid;
  grid-template-columns: 1fr 800px 1fr;
  width: 100%;
  height: 100vh;
  padding: 20px;
  box-sizing: border-box;
  overflow: hidden;
}

.left-column,
.right-column {
  display: flex;
  flex-direction: column;
  justify-content: center;
  gap: 40px;
  padding: 20px;
  align-items: center;
}

.center-column {
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  z-index: 0;
}

.notebook-container {
  width: 100%;
  max-width: 800px;
  display: flex;
  justify-content: center;
  align-items: center;
  overflow: hidden;
  z-index: 0;
}

.notebook-page {
  width: 100%;
  height: auto;
  position: relative;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.2);
  overflow: hidden;
  z-index: 0;
}

.notebook-page img {
  width: 100%;
  height: auto;
  max-height: 80vh;
  display: block;
  object-fit: contain;
}

.memory-item {
  width: 200px;
  height: 200px;
  cursor: pointer;
  transition: transform 0.3s ease;
  filter: drop-shadow(2px 2px 4px rgba(0, 0, 0, 0.2));
  z-index: 2;
  flex-shrink: 0;
}

.memory-item:hover {
  transform: scale(1.1);
}

.memory-item img {
  width: 100%;
  height: 100%;
  object-fit: contain;
  border-radius: 4px;
}

/* Tooltip styles */
.memory-item .tooltip-container {
  position: fixed;
  bottom: calc(100% + 10px);
  left: 50%;
  transform: translateX(-50%);
  max-width: 300px;
  width: max-content;
  opacity: 0;
  visibility: hidden;
  transition: opacity 0.3s ease;
  z-index: 1000;
}

.memory-item:hover .tooltip-container {
  opacity: 1;
  visibility: visible;
}

.memory-item .tooltip {
  background-color: white;
  color: black;
  padding: 1rem;
  border-radius: 8px;
  font-size: 0.9rem;
  text-align: center;
  box-shadow: 0 2px 5px rgba(0, 0, 0, 0.2);
  border: 1px solid black;
  font-family: "Playfair Display", serif;
  position: relative;
  z-index: 1000;
}

.memory-item .tooltip::after {
  content: "";
  position: absolute;
  bottom: -8px;
  left: 50%;
  transform: translateX(-50%);
  border: 8px solid transparent;
  border-top-color: white;
  border-bottom: 0;
  filter: drop-shadow(0 1px 0 black);
  z-index: 1000;
}

.memory-item .tooltip::before {
  content: "";
  position: absolute;
  bottom: -9px;
  left: 50%;
  transform: translateX(-50%);
  border: 8px solid transparent;
  border-top-color: black;
  border-bottom: 0;
  z-index: 1000;
}

.quote-container {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  text-align: center;
  opacity: 0;
  transition: opacity 1.5s ease;
  width: 80%;
  padding: 2rem;
}

.final-quote {
  font-size: 2rem;
  line-height: 1.6;
  color: #333;
  font-style: italic;
  margin: 0;
  font-family: "Playfair Display", serif;
}

.memory-item.collected {
  width: 150px;
  height: 150px;
  position: relative;
  opacity: 1;
  transform: none;
  pointer-events: none;
  margin: 0;
}

.memory-item.collected img {
  width: 100%;
  height: 100%;
  object-fit: contain;
}

.arrow {
  position: absolute;
  bottom: 0rem;
  right: 1rem;
  opacity: 0;
  transform: translateX(-10px);
  transition: all 0.5s ease;
}

.arrow.visible {
  opacity: 1;
  cursor: pointer;
  animation: arrowBounce 1.5s ease-in-out infinite;
}

@keyframes arrowBounce {
  0%,
  100% {
    transform: translateX(-10px);
  }
  50% {
    transform: translateX(0);
  }
}

.arrow::before {
  content: "â†’";
  font-size: 1.5rem;
  font-weight: bold;
  color: #000000;
}

@media (max-width: 1200px) {
  .container {
    grid-template-columns: 1fr 600px 1fr;
  }

  .memory-item {
    width: 150px;
    height: 150px;
  }
}

@media (max-width: 800px) {
  .container {
    grid-template-columns: 1fr 400px 1fr;
  }

  .memory-item {
    width: 100px;
    height: 100px;
  }
}
